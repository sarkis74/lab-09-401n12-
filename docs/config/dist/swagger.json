{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample server for Lab 09 Code Fellows. This is an application relating to sports. It includes methods for generating teams, categories and players",
    "version": "1.0.0",
    "title": "Swagger Sports App"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "sports",
      "description": "Everything about your sports",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://localhost:3000"
      }
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/api/v1/:model": {
      "get": {
        "summary": "Get client IP",
        "parameters": [
          {
            "in": "query",
            "name": "format",
            "type": "string",
            "description": "The format to return the response in, i.e. json.",
            "default": "json"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "object",
              "properties": {
                "ip": {
                  "type": "string",
                  "example": "88.68.10.107"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new category, team, player to the store",
        "description": "",
        "operationId": "addModel",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Sport object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Sport"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "modelstore_auth": [
              "write:models",
              "read:models"
            ]
          }
        ]
      }
    },
      "/api/v1/:model/:id": {
        "get": {
          "summary": "Get client IP",
          "parameters": [
            {
              "in": "query",
              "name": "format",
              "type": "string",
              "description": "The format to return the response in, i.e. json.",
              "default": "json"
            }
          ],
          "responses": {
            "200": {
              "description": "Success response",
              "schema": {
                "type": "object",
                "properties": {
                  "ip": {
                    "type": "string",
                    "example": "88.68.10.107"
                  }
                }
              }
            }
          }
        },
        "put": {
          "summary": "Update an existing category, team, player to the store",
          "description": "",
          "operationId": "updateModel",
          "consumes": [
            "application/json",
            "application/xml"
          ],
          "produces": [
            "application/xml",
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Model object that needs to be added to db",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Model"
              }
            }
          ],
          "responses": {
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "Model not found"
            },
            "405": {
              "description": "Validation exception"
            }
          }
        },

        "delete": {
          "summary": "Delete purchase order by ID",
          "description": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
          "operationId": "deleteOrder",
          "produces": [
            "application/xml",
            "application/json"
          ],
          "parameters": [
            {
              "name": "orderId",
              "in": "path",
              "description": "ID of the order that needs to be deleted",
              "required": true,
              "type": "integer",
              "minimum": 1,
              "format": "int64"
            }
          ],
          "responses": {
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "Order not found"
            }
          }
        }
      }
    }
  }





